<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:ChroZenService"
             xmlns:model="clr-namespace:ChroZenService.ViewModel.Main"
             x:Class="ChroZenService.View_Main_Center"
             x:DataType="local:ViewModel_Main">

    <ContentView.Resources>
        <model:ContentHeightConverter x:Key="ContentHeightConverter" />

        <Style TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="Silver" />
            <Setter Property="FontSize" Value="{StaticResource  ButtonFontSizeKey}" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="VerticalOptions" Value="Start" />

            <Style.Triggers>
                <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                    <Setter Property="Text" Value="Not Installed" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </ContentView.Resources>

    <ContentView.Content>
        <Grid RowSpacing="0">
            <Grid RowSpacing="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="221*"/>
                    <ColumnDefinition Width="253*"/>
                    <ColumnDefinition Width="221*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Center.Height}" />
                </Grid.RowDefinitions>
                
                <Image Grid.Column="0" Aspect="Fill" Source="{local:ImageResource ChroZenService.Images.home_side3.png}">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveInlet}" Value="0">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side1.png}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveInlet}" Value="1">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side2.png}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveInlet}" Value="2">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side3.png}" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Grid Grid.Column="0" RowSpacing="0">
                    <Grid.GestureRecognizers>
                        <SwipeGestureRecognizer Direction="Down" Command="{Binding Center.SwipeDown}" CommandParameter="Left"/>
                        <SwipeGestureRecognizer Direction="Up" Command="{Binding Center.SwipeUp}" CommandParameter="Left"/>
                    </Grid.GestureRecognizers>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveInlet, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=0}"/>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveInlet, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=1}"/>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveInlet, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=2}"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>              
                    
                    <Button Grid.Row="1" Command="{Binding Center.Inlet}" CommandParameter="0" Text="{Binding Configuration.InletType[0]}" />
                    <Rectangle Grid.Row="2"></Rectangle>
                    <Button Grid.Row="3" Command="{Binding Center.Inlet}" CommandParameter="1" Text="{Binding Configuration.InletType[1]}" />
                    <Rectangle Grid.Row="4"></Rectangle>
                    <Button Grid.Row="5" Command="{Binding Center.Inlet}" CommandParameter="2" Text="{Binding Configuration.InletType[2]}" />
                    <Rectangle Grid.Row="6"></Rectangle>


                    <StackLayout Grid.Row="{Binding Center.LeftGridRow}" Spacing="10" Margin="15, 0" VerticalOptions="Center">
                        <StackLayout.Triggers>
                            <Trigger TargetType="StackLayout" Property="Grid.Row" Value="0">
                                <Setter Property="IsVisible" Value="False" />
                            </Trigger> 
                        </StackLayout.Triggers>


                        <Label Text=""  FontSize="{StaticResource DefaultFontSizeKey}" TextColor="black" BackgroundColor="Silver" >
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="0">
                                    <Setter Property="Text" Value="{Binding Inlet[0].CarrierGas, StringFormat=' {0}'}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="1">
                                    <Setter Property="Text" Value="{Binding Inlet[1].CarrierGas, StringFormat=' {0}'}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="2">
                                    <Setter Property="Text" Value="{Binding Inlet[2].CarrierGas, StringFormat=' {0}'}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <Label Text="" HorizontalOptions="End" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="Silver">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="0">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Inlets[0], StringFormat='{0:F2}', Converter={StaticResource FloatArrayPickerKey}, ConverterParameter=2}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="1">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Inlets[1], StringFormat='{0:F2}', Converter={StaticResource FloatArrayPickerKey}, ConverterParameter=2}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="2">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Inlets[2], StringFormat='{0:F2}', Converter={StaticResource FloatArrayPickerKey}, ConverterParameter=2}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <Label Grid.Column="1" Text="mL/min" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="Silver"  />


                            <Label Text="" Grid.Row="1"  HorizontalOptions="End" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="Silver">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="0">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Pressure[0], StringFormat='{0:F3}'}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="1">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Pressure[1], StringFormat='{0:F3}'}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="2">
                                        <Setter Property="Text" Value="{Binding Path=State.Flow.Pressure[2], StringFormat='{0:F3}'}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>

                            <Label Grid.Row="1"  Grid.Column="1" Text="psi" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="Silver"  />
                        </Grid>

                        <Label Text="" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="black" BackgroundColor="Silver" >
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="0">
                                    <Setter Property="Text" Value="{Binding Inlet[0].APCMode, StringFormat=' {0}'}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="1">
                                    <Setter Property="Text" Value="{Binding Inlet[1].APCMode, StringFormat=' {0}'}" />
                                </DataTrigger>
                                <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="2">
                                    <Setter Property="Text" Value="{Binding Inlet[2].APCMode, StringFormat=' {0}'}" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>

                        <Grid IsVisible="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.Triggers>
                                <DataTrigger TargetType="Grid" Binding="{Binding Center.InletType}" Value="Capillary">
                                    <Setter Property="IsVisible" Value="True"/>
                                </DataTrigger>
                            </Grid.Triggers>
                            <Label Text=" Split " FontSize="{StaticResource DefaultFontSizeKey}" TextColor="black" BackgroundColor="Silver" />
                            <Label Text="" Grid.Column="1" FontSize="{StaticResource DefaultFontSizeKey}" TextColor="Silver" HorizontalOptions="Center" >
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="0">
                                        <Setter Property="Text" Value="{Binding Inlet[0].SplitRatio, StringFormat='1 : {0}'}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="1">
                                        <Setter Property="Text" Value="{Binding Inlet[1].SplitRatio, StringFormat='1 : {0}'}" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Center.ActiveInlet}" Value="2">
                                        <Setter Property="Text" Value="{Binding Inlet[2].SplitRatio, StringFormat='1 : {0}'}" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </Grid>
                    </StackLayout>
                       
                </Grid>


                <Image Grid.Column="1" Source="{local:ImageResource ChroZenService.Images.home_center.png}" Aspect="Fill" />


                <Image Grid.Column="2" Aspect="Fill" Source="{local:ImageResource ChroZenService.Images.home_side3.png}">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveDetector}" Value="0">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side1.png}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveDetector}" Value="1">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side2.png}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Image" Binding="{Binding Center.ActiveDetector}" Value="2">
                            <Setter Property="Source" Value="{local:ImageResource ChroZenService.Images.home_side3.png}" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Grid Grid.Column="2" RowSpacing="0">
                    <Grid.GestureRecognizers>
                        <SwipeGestureRecognizer Direction="Down" Command="{Binding Center.SwipeDown}" CommandParameter="Right"/>
                        <SwipeGestureRecognizer Direction="Up" Command="{Binding Center.SwipeUp}" CommandParameter="Right"/>
                    </Grid.GestureRecognizers>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveDetector, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=0}"/>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveDetector, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=1}"/>
                        <RowDefinition Height="10.5*"/>
                        <RowDefinition Height="{Binding Path=Center.ActiveDetector, Converter={x:StaticResource ContentHeightConverter}, ConverterParameter=2}"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Row="0" Command="{Binding Center.Detector}" CommandParameter="0" Text="{Binding Configuration.DetectorType[0]}" />
                    <Rectangle Grid.Row="1"></Rectangle>
                    <Button Grid.Row="2" Command="{Binding Center.Detector}" CommandParameter="1" Text="{Binding Configuration.DetectorType[1]}" />
                    <Rectangle Grid.Row="3"></Rectangle>
                    <Button Grid.Row="4" Command="{Binding Center.Detector}" CommandParameter="2" Text="{Binding Configuration.DetectorType[2]}" />
                    <Rectangle Grid.Row="5"></Rectangle>



                </Grid>
            </Grid>
        </Grid>
    </ContentView.Content>
</ContentView>